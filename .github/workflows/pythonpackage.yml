name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: [3.7]
        include:
          - os: ubuntu-latest
            artifact_name: demo-cli
            slash: "/"
            path_separator: ":"
            cache_location: ~/.cache/pip
          - os: macos-latest
            artifact_name: demo-cli
            slash: "/"
            path_separator: ":"
            cache_location: ~/Library/Caches/pip
          - os: windows-latest
            artifact_name: demo-cli.exe
            slash: "\\"
            path_separator: ";"
            cache_location: ~\AppData\Local\pip\Cache
      fail-fast: true
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
      - name: Cache pip modules
        uses: actions/cache@v1
        with:
          path: ${{ matrix.cache_location }}
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Package app
        run: |
          pip install .
          pyinstaller demo${{ matrix.slash }}cli.py --name demo-cli --onefile --add-data="demo/version${{ matrix.path_separator }}demo/version" --hidden-import="pkg_resources.py2_warn"
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: demo-cli-${{ matrix.os }}
          path: dist${{ matrix.slash }}${{ matrix.artifact_name }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: dist${{ matrix.slash }}${{ matrix.artifact_name }}
          asset_name: demo-cli-${{ matrix.os }}
          asset_content_type: application/zip
